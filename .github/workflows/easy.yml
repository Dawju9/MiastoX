name: Build and Publish Game

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to publish (Testing or Production)'
        required: true
        default: 'Testing'
        type: choice
        options:
          - Testing
          - Production

jobs:
  build-and-publish:
    runs-on: windows-latest
    env:
      TESTING_UNIVERSE: '4125094708'
      TESTING_PLACE: '11633610328'
      FILE_PATH: './build/rojo_output/game.rbxl'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Install Aftman
        run: |
          curl -LO https://github.com/Roblox/roblox-aftman/releases/latest/download/aftman-win-x64.exe
          Rename-Item -Path aftman-win-x64.exe -NewName aftman.exe
          Move-Item -Path aftman.exe -Destination C:\aftman.exe

      - name: Set up Aftman
        run: |
          C:\aftman.exe init
          echo 'tools:' >> aftman.toml
          echo '  rojo = { version = "latest" }' >> aftman.toml
        shell: bash
      
      - name: Install tools with Aftman
        run: C:\aftman.exe install

      - name: Build project with Rojo
        run: rojo build default.project.json -o ./build/rojo_output/game.rbxl

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          tag: ${{ github.ref_name }}
          file: Build_*.*.*.rbxl
          token: ${{ secrets.GITHUB_TOKEN }}
          name: GameBuild
          path: ${{ env.FILE_PATH }}

      - name: Publish to Roblox
        run: |
          universeId=$TESTING_UNIVERSE
          placeId=$TESTING_PLACE
          echo "Publishing to universeId: $universeId, placeId: $placeId"
          curl --verbose --fail-with-body --location --request POST "https://apis.roblox.com/universes/v1/$universeId/places/$placeId/versions?versionType=Published" \
          --header "x-api-key: ${{ secrets.API_KEY }}" \
          --header 'Content-Type: application/octet-stream' \
          --data-binary @${{ env.FILE_PATH }}
