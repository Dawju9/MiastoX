name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: [stable, 1.66.0]  # Testowanie na różnych wersjach Rust

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          components: clippy, rustfmt  # Dodatkowe komponenty Rust
          override: true

      - name: Cache Cargo registry and build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build project
        run: cargo build --release

      - name: Run tests
        run: cargo test --verbose

      - name: Run Clippy (Rust linter)
        run: cargo clippy -- -D warnings  # Włączenie błędów przy ostrzeżeniach

      - name: Format code with Rustfmt
        run: cargo fmt -- --check  # Sprawdzenie formatowania kodu

      - name: Upload build artifacts
        if: success()  # Tylko jeśli build zakończy się powodzeniem
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/release/

